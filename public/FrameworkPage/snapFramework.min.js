export class Signal{#e;#t=new Set;constructor(e=void 0){this.#e=e}subscribe(e){console.assert(!this.#t.has(e)),this.#t.add(e)}unsubscribe(e){console.assert(this.#t.has(e)),this.#t.delete(e)}get(){return this.#e}set(e){if(this.#e!==e){this.#e=e;for(const t of this.#t)t(e)}}}export function useSignals(e,t){const n=new Signal(void 0),r=()=>{const r=t(...e.map((e=>e.get())));n.set(r)};for(const t of e)t.subscribe(r);return r(),useCleanup((()=>{for(const t of e)t.unsubscribe(r)})),n}export class Context{#n=[];provide(e,t){this.#n.push(e);try{return t()}finally{this.#n.pop()}}get(){return console.assert(this.#n.length>0,"Attempted to use a context object that does not have a value provided to it (via .provide())."),this.#n.at(-1)}}export function defineElement(e,t){return class n extends HTMLElement{api={};constructor(...e){super();this.attachShadow({mode:"closed"}).append(t.call(this,...e))}static{const t=String(Math.random()).slice(2,10);customElements.define(`${e.toLowerCase()}-${t}`,n)}}}const onUninitContext=new Context;export function withLifecycle(e){const t=new Signal(!1);return{uninit:()=>t.set(!0),value:onUninitContext.provide(t,e)}}export function useCleanup(e){onUninitContext.get().subscribe(e)}export function html(e,...t){const n=e=>null!==e&&Object.getPrototypeOf(e)===Function.prototype,r=e=>e instanceof HTMLElement||e instanceof DocumentFragment;let o=e[0];for(const[s,a]of e.slice(1).entries()){const e=t[s];if(n(e))o+=`data-frameworkref="${s}"`;else{if(!r(e))throw new Error("Invalid value interpolated into the html tag.");o+=`<template data-frameworkref="${s}" data-info="placeholder"></template>`}o+=a}const s=document.createElement("template");s.innerHTML=o.trim();for(const[e,o]of t.entries())if(n(o)){const t=s.content.querySelector(`*[data-frameworkref="${e}"]`);delete t.dataset.frameworkref,o(t)}else if(r(o)){const t=s.content.querySelector(`*[data-frameworkref="${e}"]`);t.parentNode.insertBefore(o,t),t.parentNode.removeChild(t)}return s.content}export const set=(e,t=void 0)=>n=>{for(const[t,r]of Object.entries(e)){useSignals([r instanceof Signal?r:new Signal(r)],(e=>{n[t]=e}))}return t?.(n),n};export function renderEach(e,t){let n=new Map;const r=document.createComment("start renderEach()"),o=document.createComment("end renderEach()"),s=document.createDocumentFragment();return s.append(r,o),useCleanup((()=>{for(const{uninit:e}of n.values())e()})),useSignals([e],(e=>{const s=document.createDocumentFragment();for(const[r,o]of e)if(n.has(r)){const{markStart:e,markEnd:t}=n.get(r),o=document.createRange();o.setStartBefore(e),o.setEndAfter(t),s.append(o.extractContents())}else{const e=document.createComment("start renderEach child"),a=document.createComment("end renderEach child"),c=()=>t(o,r),{uninit:i,value:l}=withLifecycle(c);s.append(e,l,a),n.set(r,{markStart:e,markEnd:a,uninit:i})}const a=new Set(e.map((([e])=>e)));for(const[e,{uninit:t}]of n)a.has(e)||(t(),n.delete(e));const c=document.createRange();c.setStartAfter(r),c.setEndBefore(o),c.deleteContents(),o.parentNode.insertBefore(s,o)})),s}export function renderChoice(e){return renderEach(useSignals(e.map((e=>e.signalWhen)),((...e)=>{const t=e.findIndex((e=>e));return-1===t?[]:[[t,t]]})),(t=>e[t].render()))}export function renderIf(e,t){return renderChoice([{signalWhen:e,render:t}])}